/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as ctx from "../context"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    model: NexusPrisma<TypeName, 'model'>
    crud: any
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CommentWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  FileWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  MessageWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  PostWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  UserWhereUniqueInput: { // input type
    email?: string | null; // String
    id?: string | null; // String
    username?: string | null; // String
  }
}

export interface NexusGenEnums {
  PostAction: "DELETE" | "EDIT"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenRootTypes {
  AutoPayload: { // root type
    approvedUser?: NexusGenRootTypes['User'] | null; // User
    token?: string | null; // String
  }
  Comment: { // root type
    id: number; // Int!
    text: string; // String!
  }
  File: { // root type
    id: number; // Int!
    url: string; // String!
  }
  Message: { // root type
    id: number; // Int!
    text: string; // String!
    timeStamp: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: {};
  Post: { // root type
    caption?: string | null; // String
    id: number; // Int!
    location?: string | null; // String
    postAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Query: {};
  Room: { // root type
    id: number; // Int!
  }
  Subscription: {};
  User: { // root type
    bio?: string | null; // String
    firstName?: string | null; // String
    id: string; // String!
    lastName?: string | null; // String
    profileImage?: string | null; // String
    username: string; // String!
  }
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  CommentWhereUniqueInput: NexusGenInputs['CommentWhereUniqueInput'];
  FileWhereUniqueInput: NexusGenInputs['FileWhereUniqueInput'];
  MessageWhereUniqueInput: NexusGenInputs['MessageWhereUniqueInput'];
  PostWhereUniqueInput: NexusGenInputs['PostWhereUniqueInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  PostAction: NexusGenEnums['PostAction'];
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
  DateTime: NexusGenScalars['DateTime'];
}

export interface NexusGenFieldTypes {
  AutoPayload: { // field return type
    approvedUser: NexusGenRootTypes['User'] | null; // User
    token: string | null; // String
  }
  Comment: { // field return type
    id: number; // Int!
    post: NexusGenRootTypes['Post']; // Post!
    text: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  File: { // field return type
    id: number; // Int!
    post: NexusGenRootTypes['Post']; // Post!
    url: string; // String!
  }
  Message: { // field return type
    fromUser: NexusGenRootTypes['User']; // User!
    id: number; // Int!
    room: NexusGenRootTypes['Room']; // Room!
    text: string; // String!
    timeStamp: NexusGenScalars['DateTime']; // DateTime!
  }
  Mutation: { // field return type
    addComment: NexusGenRootTypes['Comment'] | null; // Comment
    confirmSecret: string | null; // String
    createAccount: boolean | null; // Boolean
    editUser: NexusGenRootTypes['User'] | null; // User
    followToggle: boolean | null; // Boolean
    modifyPost: NexusGenRootTypes['Post'] | null; // Post
    requestSecret: boolean | null; // Boolean
    SendMessage: NexusGenRootTypes['Message'] | null; // Message
    toggleLike: boolean | null; // Boolean
    writePost: NexusGenRootTypes['Post'] | null; // Post
  }
  Post: { // field return type
    caption: string | null; // String
    comments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    commentsCount: number | null; // Int
    files: NexusGenRootTypes['File'][]; // [File!]!
    id: number; // Int!
    isLike: boolean | null; // Boolean
    likes: NexusGenRootTypes['User'][]; // [User!]!
    likesCount: number; // Int!
    location: string | null; // String
    postAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User']; // User!
  }
  Query: { // field return type
    allUsers: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    checkUser: boolean | null; // Boolean
    searchPost: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    searchUsers: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    seeFeed: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    seeMy: NexusGenRootTypes['User'] | null; // User
    seeMyPosts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    seeMyRooms: Array<NexusGenRootTypes['Room'] | null> | null; // [Room]
    seePost: NexusGenRootTypes['Post'] | null; // Post
    seeUser: NexusGenRootTypes['User'] | null; // User
    seeUserPosts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
  }
  Room: { // field return type
    id: number; // Int!
    messages: NexusGenRootTypes['Message'][]; // [Message!]!
    participant: NexusGenRootTypes['User'][]; // [User!]!
    seeMessages: Array<NexusGenRootTypes['Message'] | null> | null; // [Message]
  }
  Subscription: { // field return type
    newMessage: NexusGenRootTypes['Message'] | null; // Message
  }
  User: { // field return type
    bio: string | null; // String
    firstName: string | null; // String
    followers: NexusGenRootTypes['User'][]; // [User!]!
    followersCount: number | null; // Int
    followings: NexusGenRootTypes['User'][]; // [User!]!
    followingsCount: number | null; // Int
    fullName: string | null; // String
    id: string; // String!
    isFollowing: boolean | null; // Boolean
    isSelf: boolean | null; // Boolean
    lastName: string | null; // String
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
    postsCount: number | null; // Int
    profileImage: string | null; // String
    username: string; // String!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addComment: { // args
      postId: number; // Int!
      text: string; // String!
    }
    confirmSecret: { // args
      email: string; // String!
      secret: string; // String!
    }
    createAccount: { // args
      email: string; // String!
      firstName?: string | null; // String
      lastName?: string | null; // String
      username: string; // String!
    }
    editUser: { // args
      bio?: string | null; // String
      firstName?: string | null; // String
      lastName?: string | null; // String
      username?: string | null; // String
    }
    followToggle: { // args
      followId: string; // String!
    }
    modifyPost: { // args
      action: NexusGenEnums['PostAction']; // PostAction!
      caption?: string | null; // String
      location?: string | null; // String
      postId: number; // Int!
    }
    requestSecret: { // args
      email: string; // String!
    }
    SendMessage: { // args
      roomId?: number | null; // Int
      text: string; // String!
      toUserId?: string | null; // ID
      toUserName: string; // String!
    }
    toggleLike: { // args
      postId: number; // Int!
    }
    writePost: { // args
      caption?: string | null; // String
      location?: string | null; // String
      url: Array<string | null>; // [String]!
    }
  }
  Post: {
    comments: { // args
      after?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      before?: NexusGenInputs['CommentWhereUniqueInput'] | null; // CommentWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    files: { // args
      after?: NexusGenInputs['FileWhereUniqueInput'] | null; // FileWhereUniqueInput
      before?: NexusGenInputs['FileWhereUniqueInput'] | null; // FileWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    likes: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Query: {
    checkUser: { // args
      email?: string | null; // String
      username?: string | null; // String
    }
    searchPost: { // args
      keyword: string; // String!
    }
    searchUsers: { // args
      keyword: string; // String!
    }
    seeFeed: { // args
      cursor?: number | null; // Int
    }
    seePost: { // args
      postId: number; // Int!
    }
    seeUser: { // args
      id?: string | null; // String
      username?: string | null; // String
    }
    seeUserPosts: { // args
      userId: string; // ID!
    }
  }
  Room: {
    messages: { // args
      after?: NexusGenInputs['MessageWhereUniqueInput'] | null; // MessageWhereUniqueInput
      before?: NexusGenInputs['MessageWhereUniqueInput'] | null; // MessageWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    participant: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    seeMessages: { // args
      cursor?: number | null; // Int
    }
  }
  Subscription: {
    newMessage: { // args
      roomId: number; // Int!
    }
  }
  User: {
    followers: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    followings: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    posts: { // args
      after?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      before?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AutoPayload" | "Comment" | "File" | "Message" | "Mutation" | "Post" | "Query" | "Room" | "Subscription" | "User";

export type NexusGenInputNames = "CommentWhereUniqueInput" | "FileWhereUniqueInput" | "MessageWhereUniqueInput" | "PostWhereUniqueInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = "PostAction";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}