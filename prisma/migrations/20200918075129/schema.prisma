// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @default(cuid()) @id
  username       String    @unique
  email          String    @unique
  firstName      String?   @default("")
  lastName       String?   @default("")
  bio            String?   @default("")
  loginSecret    String?
  followers      User[]    @relation("FollowRelation")
  followings     User[]    @relation("FollowRelation")
  posts          Post[]    @relation("PostList")
  likes          Post[]    @relation("LikeList")
  comments       Comment[]
  participatings Room[]
  messages       Message[] @relation("SendRelation")
  signUpAt       DateTime  @default(now())
}

model Post {
  id       Int       @default(autoincrement()) @id
  location String?
  caption  String?
  files    File[]
  likes    User[]    @relation("LikeList")
  comments Comment[]
  user     User      @relation("PostList", fields: [userId], references: [id])
  userId   String
  postAt   DateTime  @default(now())
}

model Comment {
  id        Int      @default(autoincrement()) @id
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  commentAt DateTime @default(now())
}

model File {
  id     Int    @default(autoincrement()) @id
  url    String
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
}

model Room {
  id          Int       @default(autoincrement()) @id
  participant User[]
  messages    Message[]
}

model Message {
  id         Int      @default(autoincrement()) @id
  text       String
  fromUser   User     @relation(name: "SendRelation", fields: [fromUserId], references: [id])
  fromUserId String
  room       Room     @relation(fields: [roomId], references: [id])
  roomId     Int
  timeStamp  DateTime @default(now())
}
